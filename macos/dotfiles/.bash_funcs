# mvn
mvn() {
    rest=$(echo "${@:2:${#}}" | xargs)

    if [[ $1 == "cc" ]]; then
        if [[ -n "$rest" ]]; then
            command mvn clean compile "$rest"
        else
            command mvn clean compile
        fi
    elif [[ $1 == "c" ]]; then
        if [[ -n "$rest" ]]; then
            command mvn compile "$rest"
        else
            command mvn compile
        fi
    elif [[ $1 == "cl" ]]; then
        if [[ -n "$rest" ]]; then
            command mvn clean "$rest"
        else
            command mvn clean
        fi
    elif [[ $1 == "i" ]]; then
        if [[ -n "$rest" ]]; then
            command mvn install "$rest"
        else
            command mvn install
        fi
    elif [[ $1 == "gen" ]]; then
        if [[ -n "$rest" ]]; then
            command mvn archetype:generate "$rest"
        else
            command mvn archetype:generate
        fi
    else
        command mvn "$@"
    fi
}

# git
git() {
    rest=$(echo "${@:2:${#}}" | xargs)

    if [[ $1 == "s" ]]; then
        if [[ -n "$rest" ]]; then
            command git status "$rest"
        else
            command git status
        fi
    else
        command git "$@"
    fi
}


# javac + java
jav() {
    name=$(echo $1 | awk 'BEGIN {FS="."} {print $1}')
    javac "$1" && java "$name"
}

# last command
lc() {
    command history | tail -n 2 | head -n 1 | cut -d " " -f 5- | tr -d "\n"
}

yabai() {
    rest=$(echo "${@:2:${#}}" | xargs)

    if [[ $1 == "list-windows" ]]; then
        if [[ -n "$rest" ]]; then
            command yabai -m query --windows | jq ".[] | {app,title}" "$rest"
        else
            command yabai -m query --windows | jq ".[] | {app,title}"
        fi
    else
        command yabai "$@"
    fi
}
